diff --git a/Makefile b/Makefile
index 09d790c..061e49a 100644
--- a/Makefile
+++ b/Makefile
@@ -76,7 +76,7 @@ AS = $(TOOLPREFIX)gas
 LD = $(TOOLPREFIX)ld
 OBJCOPY = $(TOOLPREFIX)objcopy
 OBJDUMP = $(TOOLPREFIX)objdump
-CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -Werror -fno-omit-frame-pointer
+CFLAGS = -fno-pic -static -fno-builtin -fno-strict-aliasing -O2 -Wall -MD -ggdb -m32 -fno-omit-frame-pointer
 CFLAGS += $(shell $(CC) -fno-stack-protector -E -x c /dev/null >/dev/null 2>&1 && echo -fno-stack-protector)
 ASFLAGS = -m32 -gdwarf-2 -Wa,-divide
 # FreeBSD ld wants ``elf_i386_fbsd''
@@ -181,6 +181,8 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
	_hello\
+	_lseektest\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff --git a/defs.h b/defs.h
index 82fb982..d72a4e5 100644
--- a/defs.h
+++ b/defs.h
@@ -186,5 +186,6 @@ void            switchkvm(void);
 int             copyout(pde_t*, uint, void*, uint);
 void            clearpteu(pde_t *pgdir, char *uva);

diff --git a/stat.h b/stat.h
index 8a80933..9e6bf6f 100644
--- a/stat.h
+++ b/stat.h
@@ -1,3 +1,4 @@

diff --git a/syscall.c b/syscall.c
index ee85261..8d13f95 100644
--- a/syscall.c
+++ b/syscall.c
@@ -82,6 +82,8 @@ argstr(int n, char **pp)
   return fetchstr(addr, pp);
 }
 
+int argfd(int n, struct file **pf);
+
 extern int sys_chdir(void);
 extern int sys_close(void);
 extern int sys_dup(void);
@@ -103,6 +105,8 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
 extern int sys_hello(void);
+extern int sys_lseek(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +130,8 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
 [SYS_hello]	sys_hello,
+[SYS_lseek]   sys_lseek,
};
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..5d9a08d 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
 #define SYS_hello 22
+#define SYS_lseek 23
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..0d65a2f 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -442,3 +442,36 @@ sys_pipe(void)
   fd[1] = fd1;
   return 0;
 }
+
+#define SEEK_SET 0
+#define SEEK_CUR 1
+#define SEEK_END 2
+
+uint sys_lseek(void){
+	struct file *f;
+	int fd, offset, whence, new_offset;
+
+
+	if(argfd(0, &fd, &f) < 0 || argint(1, &offset) < 0 || argint(2, &whence) < 0)
+        	return -1;
+	
+	if(whence == SEEK_SET){
+		new_offset = offset;
+	}
+	else if(whence == SEEK_CUR){
+		new_offset = f->off + offset;
+	}
+	else if(whence == SEEK_END){
+		new_offset = f->ip->size + offset;
+	}
+	else{
+		return -1;
+	}
+
+	if(new_offset <0 || new_offset > f->ip->size)
+		return -1;
+
+	f->off = new_offset;
+	return new_offset;
+
+}
diff --git a/sysproc.c b/sysproc.c
index 0686d29..f4f3a19 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -89,3 +89,9 @@ sys_uptime(void)
   release(&tickslock);
   return xticks;
 }
+
+//hello system call
+int sys_hello(void){
+	cprintf("hello world\n");
+	return 0;
+}
diff --git a/user.h b/user.h
index 4f99c52..047d598 100644
--- a/user.h
+++ b/user.h
@@ -1,3 +1,5 @@
+#include "types.h"
+
 struct stat;
 struct rtcdate;
 
@@ -23,6 +25,8 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
 int hello(void);
+int lseek(int fd, int offset, int whence);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..12a0ca1 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,5 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
 SYSCALL (hello)
+SYSCALL (lseek)
